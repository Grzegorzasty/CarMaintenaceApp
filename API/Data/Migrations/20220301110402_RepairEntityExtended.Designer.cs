// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220301110402_RepairEntityExtended")]
    partial class RepairEntityExtended
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PublicId")
                        .HasColumnType("TEXT");

                    b.Property<int>("RepairId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RepairId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("API.Entities.Repair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AirFilterChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BreakDiscsChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BreakFluidChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BreakPadsChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CabinFilterChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("CoolantChange")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfReceipt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EngineCamChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EngineOilChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EngineOilFilterChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FuelFilterChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("GearboxOilChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("GearboxOilFilterChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HydraulicOilChange")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HydraulicOilFilterChange")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KeyWords")
                        .HasColumnType("TEXT");

                    b.Property<int>("LaborPrize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PartsPrize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkshopId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.HasIndex("WorkshopId");

                    b.ToTable("Repair");
                });

            modelBuilder.Entity("API.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<int>("PurchasePrize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("VinNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("YearOfProduction")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("API.Entities.Workshop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adress")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("RepairId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Workshop");
                });

            modelBuilder.Entity("API.Entities.Photo", b =>
                {
                    b.HasOne("API.Entities.Repair", "Repair")
                        .WithMany("Photos")
                        .HasForeignKey("RepairId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repair");
                });

            modelBuilder.Entity("API.Entities.Repair", b =>
                {
                    b.HasOne("API.Entities.Vehicle", "Vehicle")
                        .WithMany("Repairs")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.Workshop", "Workshop")
                        .WithMany("Repair")
                        .HasForeignKey("WorkshopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");

                    b.Navigation("Workshop");
                });

            modelBuilder.Entity("API.Entities.Vehicle", b =>
                {
                    b.HasOne("API.Entities.AppUser", "AppUser")
                        .WithMany("Vehicles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("API.Entities.Repair", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("API.Entities.Vehicle", b =>
                {
                    b.Navigation("Repairs");
                });

            modelBuilder.Entity("API.Entities.Workshop", b =>
                {
                    b.Navigation("Repair");
                });
#pragma warning restore 612, 618
        }
    }
}
